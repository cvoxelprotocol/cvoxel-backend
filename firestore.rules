rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if isAuthentificated(userId)
    }

    match /cvoxels/{hash}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false
    }

    match /contxUsers/{email}/{document=**} {
      allow create: if true
    }

    match /drafts/{hash}/{document=**} {
      allow get, list, create, update, delete: if true
    }

    match /credentials/{hash}/{document=**} {
      allow get, list, create, update, delete: if true
    }

    match /connections/{walletAddress}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false
    }

    match /DeworkOrg/{orgId}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false
    }

    match /deworkTasks/{walletAddress}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false

    // match /tasks/{taskId}/{document=**} {
      //   allow get, list: if true
      //   allow create, update, delete: if false
      // }
    }
    match /{path=**}/tasks/{task} {
      allow read: if true
    }

    match /organization/{orgId}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false
    }

    match /memberships/{id}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false
    }

    match /membershipsubjects/{id}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false
    }

    match /events/{id}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false
    }

    match /eventattendances/{id}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false
    }

    match /verifiableworks/{id}/{document=**} {
      allow get, list: if true
      allow create, update, delete: if false
    }

    //func
    function isLogin() {
      return request.auth.uid != null;
    }

    function onlyIdentityUser(userId) {
      return request.auth.uid == userId;
    }

    function isAuthentificated(userId) {
      return isLogin() && onlyIdentityUser(userId)
    }
  }
}